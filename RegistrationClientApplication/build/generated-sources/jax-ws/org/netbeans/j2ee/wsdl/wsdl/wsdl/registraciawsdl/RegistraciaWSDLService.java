
package org.netbeans.j2ee.wsdl.wsdl.wsdl.registraciawsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "RegistraciaWSDLService", targetNamespace = "http://j2ee.netbeans.org/wsdl/WSDL/wsdl/RegistraciaWSDL", wsdlLocation = "http://localhost:8080/testWS/RegistraciaWSDLService?wsdl")
public class RegistraciaWSDLService
    extends Service
{

    private final static URL REGISTRACIAWSDLSERVICE_WSDL_LOCATION;
    private final static WebServiceException REGISTRACIAWSDLSERVICE_EXCEPTION;
    private final static QName REGISTRACIAWSDLSERVICE_QNAME = new QName("http://j2ee.netbeans.org/wsdl/WSDL/wsdl/RegistraciaWSDL", "RegistraciaWSDLService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/testWS/RegistraciaWSDLService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        REGISTRACIAWSDLSERVICE_WSDL_LOCATION = url;
        REGISTRACIAWSDLSERVICE_EXCEPTION = e;
    }

    public RegistraciaWSDLService() {
        super(__getWsdlLocation(), REGISTRACIAWSDLSERVICE_QNAME);
    }

    public RegistraciaWSDLService(WebServiceFeature... features) {
        super(__getWsdlLocation(), REGISTRACIAWSDLSERVICE_QNAME, features);
    }

    public RegistraciaWSDLService(URL wsdlLocation) {
        super(wsdlLocation, REGISTRACIAWSDLSERVICE_QNAME);
    }

    public RegistraciaWSDLService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, REGISTRACIAWSDLSERVICE_QNAME, features);
    }

    public RegistraciaWSDLService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RegistraciaWSDLService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns RegistraciaWSDLPortType
     */
    @WebEndpoint(name = "RegistraciaWSDLPort")
    public RegistraciaWSDLPortType getRegistraciaWSDLPort() {
        return super.getPort(new QName("http://j2ee.netbeans.org/wsdl/WSDL/wsdl/RegistraciaWSDL", "RegistraciaWSDLPort"), RegistraciaWSDLPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RegistraciaWSDLPortType
     */
    @WebEndpoint(name = "RegistraciaWSDLPort")
    public RegistraciaWSDLPortType getRegistraciaWSDLPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://j2ee.netbeans.org/wsdl/WSDL/wsdl/RegistraciaWSDL", "RegistraciaWSDLPort"), RegistraciaWSDLPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (REGISTRACIAWSDLSERVICE_EXCEPTION!= null) {
            throw REGISTRACIAWSDLSERVICE_EXCEPTION;
        }
        return REGISTRACIAWSDLSERVICE_WSDL_LOCATION;
    }

}
